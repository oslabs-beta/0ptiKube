# Keeping Deployment and Pod templates in the same file can be more convenient and manageable.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: traffic-generator-pod
  labels:
    app: traffic-generator-pod
spec:
  replicas: 1 # Deployment is responsible for managing this number of Pods
  selector:
    matchLabels:
      app: traffic-generator-pod
  template:
    metadata:
      labels:
        app: traffic-generator-pod  # Pod template
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
    spec:
      containers:
      - name: traffic-generator
        image: nginx:alpine
        command: ["/bin/sh"]
        args: 
          - "-c"
          - |
            # Install required packages
            echo "Installing packages..."
            apk update && apk add --no-cache stress-ng curl wget

            # Install Node Exporter
            echo "Installing Node Exporter..."
            wget https://github.com/prometheus/node_exporter/releases/download/v1.6.1/node_exporter-1.6.1.linux-amd64.tar.gz
            tar xvfz node_exporter-1.6.1.linux-amd64.tar.gz
            cd node_exporter-1.6.1.linux-amd64
            
            # Start Node Exporter with logging
            echo "Starting Node Exporter..."
            ./node_exporter --web.listen-address=:8080 > /proc/1/fd/1 2>&1 &
            
            # Verify Node Exporter is running
            echo "Waiting for Node Exporter to start..."
            sleep 5
            if curl -s http://localhost:8080/metrics > /dev/null; then
              echo "Node Exporter is running!"
            else
              echo "Node Exporter failed to start"
              exit 1
            fi

            # Your existing traffic generation script with corrected service names
            echo "Starting traffic generation..."
            while true; do
              # Launch day traffic with CPU/Memory load
              wget -q -O- http://launch-day-target-pod.default.svc.cluster.local
              stress-ng --cpu 1 --timeout 30s
              sleep 1
              # Normal operations traffic
              wget -q -O- http://normal-ops-target.default.svc.cluster.local
              sleep 2
              # Error conditions traffic
              wget -q -O- http://error-conditions-target.default.svc.cluster.local
              sleep 1
              # Database load traffic
              wget -q -O- http://db-load-target.default.svc.cluster.local
              stress-ng --cpu 2 --vm 1 --vm-bytes 128M --timeout 15s
              sleep 3
            done
        ports:
        - containerPort: 8080
          name: metrics
        resources:
          requests:
            memory: "100Mi"   
            cpu: "500m"      
          limits:
            memory: "300Mi"   
            cpu: "600m"       